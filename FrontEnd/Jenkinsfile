
pipeline {
    agent any
    environment {
        REPO = "s10-final/S10P31C103"
        DOCKERHUB_REGISTRY = "superjaehun/front"
        DOCKERHUB_CREDENTIALS = credentials('Docker-hub')

    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Remove Old Images') {
            steps {
                script {
                    // 기존 이미지 삭제
                    sh "docker rmi \$(docker images ${DOCKERHUB_REGISTRY} -q) || true"
                }
            }
        }
        stage("Build") {
            steps {
                script {
                    sh "ls -al"
                    sh "docker build -t ${DOCKERHUB_REGISTRY} FrontEnd"
                }
            }
        }
        stage("Login") {
            steps {
                sh "echo \${DOCKERHUB_CREDENTIALS_PSW} | docker login -u \${DOCKERHUB_CREDENTIALS_USR} --password-stdin"
            }
        }
        stage("Tag and Push") {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker-hub', usernameVariable: 'DOCKER_USER_ID', passwordVariable: 'DOCKER_USER_PASSWORD')]) {
                        sh "docker push ${DOCKERHUB_REGISTRY}"
                    }
                }
            }
        }
        stage('Prune old images') {
            steps {
                script {
                    sh "docker ps"
                    // 사용하지 않는 모든 도커 리소스 정리
                    sh "docker image prune -a"
                }
            }
        }
        stage('Pull') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker-hub', usernameVariable: 'DOCKER_USER_ID', passwordVariable: 'DOCKER_USER_PASSWORD')]) {
                        sh "docker stop front || true"
                        sh "docker rm front || true"
                        sh "docker rmi ${DOCKERHUB_REGISTRY}|| true"
                        sh "docker pull ${DOCKERHUB_REGISTRY}"                                               
                    }
                }
            }
        }
        stage('Up') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'Docker-hub', usernameVariable: 'DOCKER_USER_ID', passwordVariable: 'DOCKER_USER_PASSWORD')]) {
                        try{
                            sh "docker run -d --name front -p 9003:3000 ${DOCKERHUB_REGISTRY}"
                        } catch (Exception e){
                            sh "docker restart front || true"
                        }
                    }
                }
            }
        }
    }
}
