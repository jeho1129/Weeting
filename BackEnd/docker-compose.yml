version: '3.8'
services:
  back:
    container_name: back 
    networks:
      - weeting-network
    image: ${DOCKERHUB_REGISTRY}
    ports:
      - "9002:8080"
    depends_on:
      - redis
      - mysql
      - rabbitmq
    # environment:
    #   SPRING_DATASOURCE_URL: jdbc:mysql://mysql:3306/weeting?useUnicode=true&characterEncoding=utf8&serverTimezone=Asia/Seoul&zeroDateTimeBehavior=convertToNull&rewriteBatchedStatements=true
    #   SPRING_DATASOURCE_USERNAME: root
    #   SPRING_DATASOURCE_PASSWORD: c103103
    #   SPRING_REDIS_HOST: redis
    #   SPRING_REDIS_PORT: 6379
    #   SPRING_REDIS_PASSWORD: c103103

  front:
    networks:
      - weeting-network
    container_name: front 
    build:
      context: ../FrontEnd
      dockerfile: Dockerfile
    ports:
      - "9003:3000"
    depends_on:
      - back

  redis:
    container_name: redis
    hostname: redis
    volumes:
      - ~/redis/data:/data
    user: root
    networks:
      - weeting-network
    image: redis:latest
    ports:
      - "6379:6379"
    command: redis-server --requirepass c103103


  mysql:
    networks:
      - weeting-network
    image: mysql:latest
    environment:
      MYSQL_DATABASE: weeting
      MYSQL_ROOT_PASSWORD: c103103
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:management
    networks:
      - weeting-network
    ports:
      - "5672:5672"      # AMQP 프로토콜 포트
      - "15672:15672"    # 관리 대시보드 포트
      - "61613:61613"    # STOMP 플러그인 포트
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    command: ["sh", "-c", "rabbitmq-plugins enable rabbitmq_stomp rabbitmq_web_stomp rabbitmq_management; rabbitmq-server"]

volumes:
  mysql_data:
  rabbitmq_data:

networks:
  weeting-network:
    external: true